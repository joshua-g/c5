/*
 * Copyright (C) 2013  Ohm Data
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package c5db.log;

option java_package = "c5db.generated";
option java_outer_classname = "Log";
option java_generic_services = true;
option java_generate_equals_and_hash = true;
option optimize_for = SPEED;

/**
 * This is the physical entry types in the file.  This is not used in any protobuf, but used
 * while we are writing to the file.
 */
enum PhysicalEntryTypes {
    Header = 1;
    Trailer = 2;
    QuorumMapping = 3;  // This is done inline with the data entry
    MetaData = 4;   // not used right now.
    Data = 5;
    // TODO do we need this here?
    TruncationMarker = 6;
}

message RegionWalEntry {
    optional string regionInfo = 1;
    optional bytes key = 2;
    optional bytes family = 3;
    optional bytes column = 4;
    optional bytes value = 5;
    optional uint64 ts = 6;
}

message OLogTrailer {
    // just some boring stats maybe. just because.
    optional fixed32 entry_count = 1;
    optional fixed32 quorum_count = 2;
    optional fixed32 truncation_count = 3;
}

message OLogEntryHeader {
    optional int64 seqNum = 1; // same as the "index" in the terminology of the replication algorithm
    optional int64 term = 2; // election term
    optional int32 contentLength = 3; // length of content (raw bytes) after the CRC of this header
}

message WrittenEntry {
    optional string quorumId = 1;
    optional int64 seqNum = 2;
    optional int64 startFilePos = 3;
    optional int64 endFilePos = 4;
    optional bool truncation = 5;
}
